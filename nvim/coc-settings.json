{
  "languageserver": {
    "haskell": {
      "command": "hie-wrapper",
      "rootPatterns": [".stack.yaml", "cabal.config", "package.yaml"],
      "filetypes": ["hs", "lhs", "haskell"],
      "initializationOptions": {
        "languageServerHaskell": {
          "hlintOn": true
        }
      }
    }
  },
  "go.goplsOptions": {
    "usePlaceholders": true,
    "completeUnimported": true,
    "deepCompletion": true
  },
  "suggest.minTriggerInputLength": 1,
  "json.format.enable": false,
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  "coc.preferences.formatOnType": true,
  "suggest.maxCompleteItemCount": 20,
  "coc.preferences.formatOnSaveFiletypes": [
    "javascript",
    "typescript",
    "typescriptreact",
    "javascriptreact",
    "json",
    "css",
    "scss",
    "markdown",
    "rust",
    "python",
    "yaml",
    "xml",
    "go"
  ],
  "eslint.filetypes": [
    "javascript",
    "typescript",
    "typescriptreact",
    "javascriptreact",
    "javascript.jsx",
    "typescript.tsx"
  ],
  "diagnostic.signOffset": 9999999,
  "diagnostic.errorSign": "-",
  "diagnostic.warningSign": "-",
  "diagnostic.infoSign": "-",
  "emmet.includeLanguages": {
    "typescript-react": "typescript.tsx",
    "javascript-react": "javascript.tsx",
    "smarty": "html"
  },
  "python.jediEnabled": false,
  "python.formatting.provider": "black",
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.mypyEnabled": true,
  "diagnostic-languageserver.filetypes": {
    "go": ["golangci-lint"]
  },
  "diagnostic-languageserver.linters": {
    "golangci-lint": {
      "command": "golangci-lint",
      "rootPatterns": [".git", "go.mod"],
      "debounce": 100,
      "args": [
        "run",
        "--out-format",
        "json",
        "--config",
        "~/.golangci.yml",
        "%file"
      ],
      "sourceName": "golangci-lint",
      "parseJson": {
        "errorsRoot": "Issues",
        "line": "Pos.Line",
        "column": "Pos.Column",
        "message": "${Text} [${FromLinter}]",
        "security": "Severity"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "note": "info"
      }
    }
  }
}
